{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRidirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDOzXTfvsIQy5BOYS3AxVYjV2_9icwBu2Y\",\n  authDomain: \"clothing-db-43a48.firebaseapp.com\",\n  projectId: \"clothing-db-43a48\",\n  storageBucket: \"clothing-db-43a48.appspot.com\",\n  messagingSenderId: \"1029244768861\",\n  appId: \"1:1029244768861:web:388c7920fb4bf52c8c33b4\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleprovider = new GoogleAuthProvider();\ngoogleprovider.getCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleprovider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data;\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n\n    return userDocRef;\n  }\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRidirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleprovider","getCustomParameters","prompt","auth","signInWithGooglePopup","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/chetan/ReactProject/ClothingProject/ecommerce-clothing/ClothingSite/src/utils/firebase/firebase.utils.jsx"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {getAuth,signInWithRidirect,\n    signInWithPopup,\n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n     signInWithEmailAndPassword,\n    signOut,\nonAuthStateChanged} from 'firebase/auth';\nimport {getFirestore,doc,getDoc,setDoc,collection,writeBatch,query,getDocs} from 'firebase/firestore';\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n\n    apiKey: \"AIzaSyDOzXTfvsIQy5BOYS3AxVYjV2_9icwBu2Y\",\n  \n    authDomain: \"clothing-db-43a48.firebaseapp.com\",\n  \n    projectId: \"clothing-db-43a48\",\n  \n    storageBucket: \"clothing-db-43a48.appspot.com\",\n  \n    messagingSenderId: \"1029244768861\",\n  \n    appId: \"1:1029244768861:web:388c7920fb4bf52c8c33b4\"\n  \n  };\n  \n  \n  // Initialize Firebase\n  \n  const firebaseApp = initializeApp(firebaseConfig);\n\n  const googleprovider = new GoogleAuthProvider();\n  googleprovider.getCustomParameters({ prompt:\"select_account\"})\n\n  export const auth = getAuth();\n  export const signInWithGooglePopup = ()=> signInWithPopup(auth,googleprovider);\n\n  export const db = getFirestore();\n\n  export const addCollectionAndDocuments = async (collectionKey,objectsToAdd) =>{\n        const collectionRef= collection(db,collectionKey);\n        const batch= writeBatch(db);\n        objectsToAdd.forEach((object)=>{\n            const docRef= doc(collectionRef,object.title.toLowerCase());\n            batch.set(docRef,object);\n        })\n\n        await batch.commit();\n  }\n\n  export const getCategoriesAndDocuments = async () =>{\n        const collectionRef = collection(db,'categories');\n        const q = query(collectionRef);\n        const querySnapshot = await getDocs(q);\n\n        const categoryMap = querySnapshot.docs.reduce((acc,docSnapshot)=>{\n        const {title,items} = docSnapshot.data;\n        acc[title.toLowerCase()] = items;\n            return acc;\n        },{})\n\n        return categoryMap;\n  }\n\n  export const createUserDocumentFromAuth = async (userAuth,additionalInformation)=>{\n      if(!userAuth)return;\nconst userDocRef = doc(db,'users',userAuth.uid);\nconst userSnapshot = await getDoc(userDocRef);\n\nif(!userSnapshot.exists()){\n    const {displayName,email} = userAuth;\n    const createdAt = new Date();\n\n    try{\n        await setDoc(userDocRef, {\n            displayName, email,createdAt,...additionalInformation\n        }          \n            );\n\n    }catch(error){\n        console.log('error creating the user', error.message);\n    }\n    return userDocRef;\n}\n  };\n\n  export const createAuthUserWithEmailAndPassword = async (email,password)=>{\n     if(!email || !password) return;\n     return await createUserWithEmailAndPassword(auth,email,password);\n  };\n\n  export const signInAuthUserWithEmailAndPassword= async (email,password)=>{\n      if(!email || !password) return;\n    return signInWithEmailAndPassword(auth,email,password);\n  }\n\n  export const signOutUser = async ()=> await signOut(auth);\n\n  export const onAuthStateChangedListener = (callback)=> onAuthStateChanged(auth,callback);"],"mappings":"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"},"metadata":{},"sourceType":"module"}